/ (fcn) sym.n 20
|   sym.n ();
|           0x08048454      push ebp
|           0x08048455      ebp = esp
|           0x08048457      esp -= 0x18
|           0x0804845a      dword [esp] = str.bin_cat__home_user_level7_.pass ; 0x6e69622f ; "/bin/cat /home/user/level7/.pass" ; const char *string
|           0x08048461      sym.imp.system ()                          ; int system(const char *string)
|           0x08048466      leave 
\           0x08048467      return
/ (fcn) sym.m 20
|   sym.m ();
|           0x08048468      push ebp
|           0x08048469      ebp = esp
|           0x0804846b      esp -= 0x18
|           0x0804846e      dword [esp] = str.Nope                     ; 0x65706f4e ; "Nope" ; const char *s
|           0x08048475      sym.imp.puts ()                            ; int puts(const char *s)
|           0x0804847a      leave 
\           0x0804847b      return
/ (fcn) main 88
|   int main (int argc, char **argv, char **envp);
|           ; arg int32_t argv @ ebp+0xc
|           ; var char *src @ esp+0x4
|           ; var void *var_18h @ esp+0x18
|           ; var char *dest @ esp+0x1c
|           0x0804847c      push ebp
|           0x0804847d      ebp = esp
|           0x0804847f      esp &= 0xfffffff0
|           0x08048482      esp -= 0x20
|           0x08048485      dword [esp] = 0x40                         ; 64 ; size_t size
|           0x0804848c      sym.imp.malloc ()                          ; void *malloc(size_t size)
|           0x08048491      dword [dest] = eax
|           0x08048495      dword [esp] = 4                            ; size_t size
|           0x0804849c      sym.imp.malloc ()                          ; void *malloc(size_t size)
|           0x080484a1      dword [var_18h] = eax
|           0x080484a5      edx = sym.m                                ; 0x8048468 ; sym.n
|           0x080484aa      eax = dword [var_18h]
|           0x080484ae      dword [eax] = edx
|           0x080484b0      eax = dword [argv]
|           0x080484b3      eax += 4
|           0x080484b6      eax = dword [eax]
|           0x080484b8      edx = eax
|           0x080484ba      eax = dword [dest]
|           0x080484be      dword [src] = edx                          ; const char *src
|           0x080484c2      dword [esp] = eax                          ; char *dest
|           0x080484c5      sym.imp.strcpy ()                          ; char *strcpy(char *dest, const char *src)
|           0x080484ca      eax = dword [var_18h]
|           0x080484ce      eax = dword [eax]
|           0x080484d0      eax ()
|           0x080484d2        
\           0x080484d3      return 
            ;-- main:
