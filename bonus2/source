#include <stdint.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

uint32_t language;	//bss

void greetuser(char *s2)
{
	char s1[0x48]; //72 bytes

	if (language == 1)
        strcpy(s1, L"Hyvää päivää ");	//not a call, sets the buffer dword by dword
	else if (language == 2)
        strcpy(s1, "Goedemiddag! ");	//not a call, sets the buffer dword by dword
	else
		strcpy(s1, "Hello ");	//not a call, sets the buffer dword by dword
	strcat(s1, s2);
	puts(s1);
	return;
}

int main(int argc, char **argv)
{
	// 0xa0 = 160 bytes reserved on stack
	
	char buff[80];  //esp
	char dest[76];	//esp+50
	char *lang;		//esp+9c

	if (argc != 3)
		return (0);
	for (uint32_t ecx = 0; ecx < 0x13; ecx++)
        *(uint32_t*)(dest + (ecx * 4)) = 0;		//~= bzero(dest, 76);
	strncpy(dest, argv[1], 0x28);
	strncpy(dest + 0x28, argv[2], 0x20);
	lang = getenv("LANG");
	if (!lang) {
		;
	}
	else if (!memcmp(lang, "fi", 2))
		language = 1;
	else if (!memcmp(lang, "nl", 2))
		language = 2;
	
	for (uint32_t ecx = 0; ecx < 0x13; ecx++)
		*(uint32_t*)(buff + (ecx * 4)) = *(uint32_t*)(dest + (ecx * 4)); //writes 76 bytes on buff
	greetuser(buff);
	return 0;
}
